package sender

//
//// Code generated by MockGen. DO NOT EDIT.
//// Source: sender/isender.go
//
//// Package sender is a generated GoMock package.
//
//import (
//gomock "github.com/golang/mock/gomock"
//reflect "reflect"
//)
//
//// MockISender is a mock of ISender interface
//type MockISender struct {
//	ctrl     *gomock.Controller
//	recorder *MockISenderMockRecorder
//}
//
//// MockISenderMockRecorder is the mock recorder for MockISender
//type MockISenderMockRecorder struct {
//	mock *MockISender
//}
//
//// NewMockISender creates a new mock instance
//func NewMockISender(ctrl *gomock.Controller) *MockISender {
//	mock := &MockISender{ctrl: ctrl}
//	mock.recorder = &MockISenderMockRecorder{mock}
//	return mock
//}
//
//// EXPECT returns an object that allows the caller to indicate expected use
//func (m *MockISender) EXPECT() *MockISenderMockRecorder {
//	return m.recorder
//}
//
//// Send mocks base method
//func (m *MockISender) Send(body string) {
//	m.ctrl.Call(m, "Send", body)
//}
//
//// Send indicates an expected call of Send
//func (mr *MockISenderMockRecorder) Send(body interface{}) *gomock.Call {
//	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockISender)(nil).Send), body)
//}
//
